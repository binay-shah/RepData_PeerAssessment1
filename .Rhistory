my_date<-ymd("1989-05-17")
my_date
class(my_date)
my_date
ymd("1989 May 17")
ymd("1989 May 17")
mdy()
mdy
mdy(March 12, 1975)
mdy("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
dmy(25081985)
ymd("192012")
ymd("192012")
ymd("1920/1/2")
dt1
ymd("1920/1/2")
ymd_hms(dt1)
ymd_hms(dt1)
hms("03:22:14")
hms("03:22:14")
dt2
ymd(dt2)
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment
this_moment<-update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment<-update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
this_moment
nyc<-now("America/New_York")
nyc<-now("America/New_York")
nyc
nyc
depart<-nyc + days(2)
depart
depart<-nyc + days(2)
depart <- update(depart, hours = 17, minutes = 34)
depart
depart
arrive <- depart + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
?with_tz
arrive <- depart + hours(15) + minutes(50)
with_tz(arrive, "Asia/Hong_Kong")
with_tz(arrive, "Asia/Hong_Kong")
arrive<- with_tz(arrive, "Asia/Hong_Kong")
arrive<- with_tz(arrive, "Asia/Hong_Kong")
arrive
arrive
last_time<-mdy("June 17, 2008", tz = "Singapore")
last_time
last_time<-mdy("June 17, 2008", tz = "Singapore")
?new_interval
last_time<-mdy("June 17, 2008", tz = "Singapore")
how_long(<-new_interval(last_time, arrive)
how_long<-new_interval(last_time, arrive)
as.period(how_long)
as.period(how_long)
stopwatch()
library(swirl)
swirl()
qplot(displ, hwy, data=mpgh, geom=c("point", "smooth"), facets=". ~ drv",  method="loess")
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=". ~ drv",  method="loess")
qplot(displ, hwy, data = mpg, geom=c("point",
| "smooth"),facets=.~drv,method="loess")
qplot(displ, hwy, data = mpg, geom=c("point",
"smooth"),facets=.~drv,method="loess")
g<-ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(. ~ drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(. ~ drv)+ggtitle("Swirl Rules")
g+geom_point()+geom_smooth(method="lm")+facet_grid(. ~ drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=0.5)
g+geom_point(size=4, alpha=0.5, aes(color="drv"))
g+geom_point(size=4, alpha=0.5, aes(color=drv))
g+geom_point(size=4, alpha=0.5, aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y= "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") +
labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv), size=2, alpha=0.5)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g + geom_point(aes(color = drv), size=2, alpha=0.5)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family="Times")
g + geom_point(aes(color = drv)) + theme_bw(base_family="Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy))
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g+geom_line()
g+geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)
g + geom_point() +
facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")
g + geom_point() +
facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")
g + geom_point() +
facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway
Mileage",title="Swirl Rules!")
g + geom_point() +
facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30, fill="cut")
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,binwidth=18497/30, fill="cut")
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density", color=cut())
qplot(price,data=diamonds,geom="density", color=cut
)
)
qplot(price,data=diamonds,geom="density", color=cut
)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds, shape=cut)
qplot(carat,price,data=diamonds, color=cut)
qplot(carat,price,data=diamonds, color=cut)
qplot(carat,price,data=diamonds,
color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds,
color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds,
color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds, color=cut,geom=c("point","smooth"),method="lm",facets=.~cut)
qplot(carat,price,data=diamonds, color=cut,geom=c("point","smooth"),method="lm",facets=.~cut)
g <- ggplot(diamonds,aes(depth,price))
summary(g)
summary(g)
g+geom_point(alpha=1/3)
g+geom_point(alpha=1/3)
utpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
diamonds$car2 <- cut(diamonds$carat,cutpoints)
diamonds$car2 <- cut(diamonds$carat,cutpoints)
g <- ggplot(diamonds,aes(depth,price))
g <- ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?trellis.par.set
?geom_bar
?geom
?transform
swirl()
library(swirl)
rm(list=ls())
swirl()
dist(dataFrame)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=.4, col="blue")
abline(h=.4, col="red")
5
5
9
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, cm.colors(25))
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex2, lw=2)
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lw=2)
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
midst(x,y, cx,cy)
mdist(x,y, cx,cy)
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
tapply(y, newClust, mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y, newCx, newCy)
apply(distTmp2, 2, which.min)
apply(distTmp2, 2, which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame, centers=3)
kmObj$iter
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatMap(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%t(matv)
matu %*% diag %*% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
svd1$d
head(constantMatrix)
svd2$d
svd2$d
svd2$v[,1:2]
svd2$v[,1:2]
svd2$d
svd2$d
dim(faceData)
dim(faceData)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1]) OR a1 <- svd1$u[,1] %*%
t(svd1$v[,1]) * svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssdd)
names(ssd)
names(ssd[562:563])
table(ssd$subject)
table(ssd$subject))
table(ssd$subject)
sum(table(ssd$subject))
table( ssd$activity)
table( ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
dim(sub1)
names(sub1[1:12])
names(sub1[1:12])
myedit("showXY.R")
myedit("showXY.R")
showMe(1:6)
showMe(1:6)
mdist <- dist(sub1[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
unclass(sub1$activity)
myplclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
dim(svd1$u)
mdist <- dist(sub1[,c(10:12,maxCon)])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon]) or names(sub1)[maxCon]
names(sub1[maxCon])
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
dim(kClust$centers)
laying <- which(kClust$size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
walkdown <- which(kClust$size==49)
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
library(swirl)
rm(list=ls())
swir()
swirl()
dim(pm0)
head(pm0)
cnames
strsplt(cnames, "|", TRUE)
strsplit(cnames, "|", TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
class(cnames)
play()
cnames[1]
cnames[[1]]
cnames[[1]][1]
nxt()
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<=pm1$Sample.Value
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summar(x1)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1)
)
negative<-x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates), "%Y%m%d")
head(dates)
?hist
play()
negative
nxt()
hist(dates[negative], "month")
str(site0)
both<-interset(site0, site1)
both<-intersect(site0, site1)
both
head(pm0)
cnto<-subset(pm0, State.Code==36)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub<-subset(cnt0, County.Code equal == 63 & Site.ID ==2008)
pm0sub<-subset(cnt0, County.Code  == 63 & Site.ID ==2008)
pm1sub<-subset(cnt1, County.Code  == 63 & Site.ID ==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(h=meadin(pm25), lwd=2)
abline(h=media
n(pm25), lwd=2)
abline(h=median(pm25), lwd=2)
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1, x1sub, pch = 20)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
mn0<-with(pm0, tapply(Sample.Vaue, State.Code, meanna.rm=TRUE))
mn0<-with(pm0, tapply(Sample.Vaue, State.Code, mean,na.rm=TRUE))
mn0<-with(pm0, tapply(Sample.Value, State.Code, mean,na.rm=TRUE))
str(mn0)
mn1<-with(pm1, tapply(Sample.Value, State.Code, mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state=names(mn0), mean=mn0)
d1<-data.frame(state=names(mn1), mean=mn1)
d1<-data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
head(mrg)
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
head(mrg)
with(mrg, points(rep(2, 52), mrg[, 3]))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x <
| mrg$mean.y, ]
mrg[mrg$mean.x <mrg$mean.y, ]
?tapply
library(dplyr)
library(lattice)
activity_data<-read.csv("./activity.csv")
setwd("/Users/binay/git/RepData_PeerAssessment1")
activity_data<-read.csv("./activity.csv")
activity_data<-transform(activity_data, date = as.Date(date, format="%Y-%m-%d"))
sum.by.day <- activity_data %>%
filter(!is.na(steps)) %>%
group_by( date) %>%
summarize(steps=sum(steps, na.rm=TRUE))
hist(sum.by.day$steps, xlab="Steps", main="Total Steps per day")
as.integer(mean(sum.by.day$steps))
as.integer(median(sum.by.day$steps))
interval.avg.days <- activity_data %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarize(mean.steps = mean(steps))
plot(interval.avg.days$interval, interval.avg.days$mean, type="l", xlab = "Interval", ylab = "Steps")
subset(interval.avg.days, mean.steps==max(mean.steps))
na_count <- sum(is.na(activity_data$steps))
na_count
nas <- is.na(activity_data$steps)
nas
data_full <- activity_data
nas <- is.na(data_full$steps)
avg_interval <- tapply(data_full$steps, data_full$interval, mean, na.rm=TRUE, simplify=TRUE)
avg_interval
avg_interval <- tapply(data_full$steps, data_full$interval, mean, na.rm=TRUE, simplify=FALSE)
avg_interval
?tapply
avg_interval <- tapply(data_full$steps, data_full$interval, mean, na.rm=TRUE, simplify=TRUE)
data_full$interval[nas]
nasna
nas
dim(nas)
length()
length(nas)
dim(data_full)
data_full$interval[nas])
data_full$interval[nas]
nas
data_full$interval[nas]
length(data_full$interval[nas])
```{r}
sum.by.day <- activity_data %>%
head(average_data)
data_full <- mutate(data_full, weektype = ifelse(weekdays(data_full$date) == "Saturday" | weekdays(data_full$date) == "Sunday", "weekend", "weekday"))
data_full$weektype <- as.factor(data_full$weektype)
head(data_full)
average_data <- data_full %>%
group_by(weektype, interval) %>%
summarise(steps = mean(steps))
library(lattice)
xyplot(mean ~ interval | weektype, average_data, type="l")
head(average_data)
xyplot(interval | weektype, average_data, type="l")
xyplot(steps~ interval | weektype, average_data, type="l")
average_data$steps
average_data <- data_full %>%
data_full <- mutate(data_full, weektype = ifelse(weekdays(data_full$date) == "Saturday" | weekdays(data_full$date) == "Sunday", "weekend", "weekday"))
data_full$weektype <- as.factor(data_full$weektype)
head(data_full)
data_full <- activity_data
nas <- is.na(data_full$steps)
avg_interval <- tapply(data_full$steps, data_full$interval, mean, na.rm=TRUE, simplify=TRUE)
data_full$steps[nas] <- avg_interval[as.character(data_full$interval[nas])]
sum.by.day <- data_full %>%
group_by( date) %>%
summarize(steps=sum(steps))
hist(sum.by.day$steps, xlab="steps per day", main = "Histogram of total steps per day")
data_full <- mutate(data_full, weektype = ifelse(weekdays(data_full$date) == "Saturday" | weekdays(data_full$date) == "Sunday", "weekend", "weekday"))
data_full$weektype <- as.factor(data_full$weektype)
head(data_full)
average_data <- data_full %>%
group_by(weektype, interval) %>%
summarise(steps = mean(steps))
library(lattice)
xyplot(steps~ interval | weektype, average_data, type="l")
